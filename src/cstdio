/*
 *	This file is part of the C++ Standard Library C-style input/output library.
 *
 *  ***************************************************************************
 *
 *	File: cstdio
 *	Date: September 10, 2021
 *	Version: 1.0
 *	Author: Michael Brodsky
 *	Email: mbrodskiis@gmail.com
 *	Copyright (c) 2012-2021 Michael Brodsky
 *
 *	***************************************************************************
 *
 *  This file is part of "Pretty Good" (Pg). "Pg" is free software:
 *	you can redistribute it and/or modify it under the terms of the
 *	GNU General Public License as published by the Free Software Foundation,
 *	either version 3 of the License, or (at your option) any later version.
 *
 *  This file is distributed in the hope that it will be useful, but
 *	WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *	along with this file. If not, see <http://www.gnu.org/licenses/>.
 *
 *	**************************************************************************
 *
 *	Description:
 *
 *		This file defines objects in the <cstdio> header of the C++ Standard
 *		Library, to the extent they are supported by the Arduino
 *		implementation. The objects behave according to the C++ ISO/IEC 14882
 *		Standards, except as noted.
 *
 *	Notes:
 *
 *		This header was originally in the C standard library as <stdio.h>.
 * 
 *	Credits:
 * 
 *		This file is based in part on the GNU ISO C++ Library, Copyright (C) 
 *		1997-2017 Free Software Foundation, Inc.
 *
 *	**************************************************************************/

#if !defined __PG_CSTDIO_H
# define __PG_CSTDIO_H 20210910L

# include "pg.h"

# if defined __PG_HAS_NAMESPACES

#  include <stdio.h>

 // Get rid of any conflicting macros defined in <stdio.h>.

#  undef clearerr
#  undef fclose
#  undef feof
#  undef ferror
#  undef fflush
#  undef fgetc
#  undef fgetpos
#  undef fgets
#  undef fopen
#  undef fprintf
#  undef fputc
#  undef fputs
#  undef fread
#  undef freopen
#  undef fscanf
#  undef fseek
#  undef fsetpos
#  undef ftell
#  undef fwrite
#  undef getc
#  undef getchar
#  undef gets
#  undef perror
#  undef printf
#  undef putc
#  undef putchar
#  undef puts
#  undef remove
#  undef rename
#  undef rewind
#  undef scanf
#  undef setbuf
#  undef setvbuf
#  undef sprintf
#  undef sscanf
#  undef tmpfile
#  undef tmpnam
#  undef ungetc
#  undef vfprintf
#  undef vprintf
#  undef vsprintf

namespace std
{
	using ::FILE;
    using ::fpos_t;

	using ::clearerr;
	using ::fclose;
	using ::feof;
	using ::ferror;
	using ::fflush;
	using ::fgetc;
	using ::fgetpos;
	using ::fgets;
	using ::fopen;
	using ::fprintf;
	using ::fputc;
	using ::fputs;
	using ::fread;
	using ::freopen;
	using ::fscanf;
	using ::fseek;
	using ::fsetpos;
	using ::ftell;
	using ::fwrite;
	using ::getc;
	using ::getchar;
	using ::gets;
	using ::perror;
	using ::printf;
	using ::putc;
	using ::putchar;
	using ::puts;
	using ::remove;
	using ::rename;
	using ::rewind;
	using ::scanf;
	using ::setbuf;
	using ::setvbuf;
	using ::sprintf;
	using ::sscanf;
	using ::tmpfile;
	using ::tmpnam;
	using ::ungetc;
	using ::vfprintf;
	using ::vprintf;
	using ::vsprintf;
} // namespace std

# else // !defined __PG_HAS_NAMESPACES
#  error requires namespace support.
# endif // defined __PG_HAS_NAMESPACES

#endif // !defined __PG_CSTDIO_H
