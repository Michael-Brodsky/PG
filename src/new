/*
 *  This header is part of the C++ Standard Library dynamic memory management 
 *  library. 
 *
 *  ***************************************************************************
 *
 *  File: new
 *  Date: March 1, 2025
 *  Version: 1.0
 *  Author: Michael Brodsky
 *  Email: mbrodskiis@gmail.com
 *  Copyright (c) 2012-2025 Michael Brodsky
 *
 *  ***************************************************************************
 *
 *  This file is part of "Pretty Good" (Pg). "Pg" is free software:
 *  you can redistribute it and/or modify it under the terms of the
 *  GNU General Public License as published by the Free Software Foundation,
 *  either version 3 of the License, or (at your option) any later version.
 *
 *  This file is distributed in the hope that it will be useful, but
 *  WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this file. If not, see <http://www.gnu.org/licenses/>.
 *
 *  **************************************************************************
 *
 *  Description:
 *
 *    This file defines several "placement new" "placement delete" functions  
 *    in the <new> header of the C++ Standard Library that are not implemented 
 *    in the the Arduino libraries.
 *
 *  **************************************************************************/

#if !defined __PG_NEW_
# define __PG_NEW_ 20250301L

# include <new.h>	// Arduino new header.

// Non-allocating placement allocation functions.
inline void* operator new(std::size_t, void* p) throw() { return p; }
inline void* operator new[](std::size_t, void* p) throw() { return p; }

// Non-allocating placement deallocation functions.
inline void operator delete(void* , void *) throw() {}
inline void operator delete[](void* , void *) throw() {}

#endif 	// !defined __PG_NEW_
