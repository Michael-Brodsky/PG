/*
 *	This file defines objects from the C++ Standard Library floating-point 
 *  environment library.
 *
 *	***************************************************************************
 *
 *	File: cfenv
 *	Date: September 10, 2021
 *	Version: 1.0
 *	Author: Michael Brodsky
 *	Email: mbrodskiis@gmail.com
 *	Copyright (c) 2012-2022 Michael Brodsky
 *
 *	***************************************************************************
 *
 *  This file is part of "Pretty Good" (Pg). "Pg" is free software:
 *	you can redistribute it and/or modify it under the terms of the
 *	GNU General Public License as published by the Free Software Foundation,
 *	either version 3 of the License, or (at your option) any later version.
 *
 *  This file is distributed in the hope that it will be useful, but
 *	WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *	along with this file. If not, see <http://www.gnu.org/licenses/>.
 *
 *	***************************************************************************
 *
 *	Description:
 *
 *		This file defines objects in the <cfenv> header of the C++ Standard
 *		Template Library (STL) implementation - to the extent they are
 *		supported by the Arduino implementation. The objects behave according
 *		to the ISO C++11 Standard: (ISO/IEC 14882:2011), except as noted.
 *
 *	Notes:
 *
 *		This header was originally in the C standard library as <fenv.h>.
 * 
 *  Credits:
 * 
 *		This file is based in part on the GNU ISO C++ Library, Copyright (C) 
 *		1997-2017 Free Software Foundation, Inc.
 *
 *	**************************************************************************/

#if !defined __PG_CFENV_
# define __PG_CFENV_ 20210910

# include <pg.h>		// Pg environment.

# if defined __PG_HAS_NAMESPACES 

# if __PG_HAS_FENV_H
#  include <fenv.h>

#undef feclearexcept
#undef fegetexceptflag
#undef feraiseexcept
#undef fesetexceptflag
#undef fetestexcept
#undef fegetround
#undef fesetround
#undef fegetenv
#undef feholdexcept
#undef fesetenv
#undef feupdateenv

namespace std
{
	// types
	using ::fenv_t;
	using ::fexcept_t;

	// functions
	using ::feclearexcept;
	using ::fegetexceptflag;
	using ::feraiseexcept;
	using ::fesetexceptflag;
	using ::fetestexcept;

	using ::fegetround;
	using ::fesetround;

	using ::fegetenv;
	using ::feholdexcept;
	using ::fesetenv;
	using ::feupdateenv;
} // namespace std

# endif // __PG_HAS_FENV_H

# else // !defined __PG_HAS_NAMESPACES
#  error Requires C++11 and namespace support.
# endif // defined __PG_HAS_NAMESPACES 

#endif // !defined __PG_CFENV_